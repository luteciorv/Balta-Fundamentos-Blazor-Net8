@page "/products"

@using Microsoft.EntityFrameworkCore

@inject ApplicationDbContext Context

@attribute [StreamRendering(true)]
 
<h2 class="text-center">Produtos</h2>

<div class="mb-3">
    <a href="/products/create" class="btn btn-outline-primary">Cadastrar novo produto</a>
</div>

@if (!_products.Any())
{
    <p class="text-center">
        Carregando os produtos
    </p>
}
else
{
    <table class="table table-bordered shadow">
        <thead>
            <tr>
                <th>Código</th>
                <td>Nome</td>
                <td>Descrição</td>
                <td>Preço</td>
                <td>Categoria</td>
                <td></td>
            </tr>
        </thead>

        <tbody>
            @foreach (var product in _products)
            {
                <tr>
                    <td>@product.Id</td>
                    <td><a href="/products/@product.Id">@product.Title</a></td>
                    <td>@product.Description</td>
                    <td>@product.Price.ToString("C")</td>
                    <td>@product.Category.Title</td>

                    <td class="text-center">
                        <a href="/products/edit/@product.Id" class="btn btn-outline-info">Editar</a>
                        &nbsp;&nbsp;
                        <a href="/products/delete/@product.Id" class="btn btn-outline-danger">Excluir</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<Product> _products = Enumerable.Empty<Product>();

    protected override async Task OnInitializedAsync()
    {
        _products = await Context.Products
                            .Include(p => p.Category)
                            .AsNoTracking()
                            .ToListAsync();
    }
}